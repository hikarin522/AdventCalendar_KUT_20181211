# EditorConfig is awesome:http://EditorConfig.org

# top-most EditorConfig file
root = true

# default setting
[*]
charset                  = utf-8
end_of_line              = crlf
indent_style             = space
indent_size              = 4
trim_trailing_whitespace = true
insert_final_newline     = true

[*.md]
indent_size              = 2
trim_trailing_whitespace = false

[*.{bat,ps1}]
charset = cp932

# Visual Studio
[*.{csproj,user}]
charset                  = utf-8-bom
trim_trailing_whitespace = false
insert_final_newline     = false

# Visual Studio coding convention settings
# https://docs.microsoft.com/en-us/visualstudio/ide/editorconfig-code-style-settings-reference

# Language conventions
# options_name = false | true : none | silent | suggestion | warning | error

# .NET code style settings
[*.{cs,vb}]

# "This." and "Me." qualifiers
dotnet_style_qualification_for_field                             = true : warning
dotnet_style_qualification_for_property                          = true : warning
dotnet_style_qualification_for_method                            = true : warning
dotnet_style_qualification_for_event                             = true : warning

# Language keywords instead of framework type names for type references
dotnet_style_predefined_type_for_locals_parameters_members       = true : warning
dotnet_style_predefined_type_for_member_access                   = true : warning

# Modifier preferences
# dotnet_style_require_accessibility_modifiers = always | for_non_interface_members | never
dotnet_style_require_accessibility_modifiers                     = always : warning
dotnet_style_readonly_field                                      = true : warning

# Parentheses preferences
# dotnet_style_parentheses_in = always_for_clarity | never_if_unnecessary
dotnet_style_parentheses_in_arithmetic_binary_operators          = always_for_clarity : suggestion
dotnet_style_parentheses_in_relational_binary_operators          = always_for_clarity : suggestion
dotnet_style_parentheses_in_other_binary_operators               = always_for_clarity : suggestion
dotnet_style_parentheses_in_other_operators                      = never_if_unnecessary : suggestion

# Expression-level preferences
dotnet_style_object_initializer                                  = true : suggestion
dotnet_style_collection_initializer                              = true : suggestion
dotnet_style_explicit_tuple_names                                = true : warning
dotnet_style_prefer_inferred_tuple_names                         = true : warning
dotnet_style_prefer_inferred_anonymous_type_member_names         = true : warning
dotnet_style_prefer_auto_properties                              = true : warning
dotnet_style_prefer_is_null_check_over_reference_equality_method = true : warning
dotnet_style_prefer_conditional_expression_over_assignment       = true : warning
dotnet_style_prefer_conditional_expression_over_return           = true : suggestion

# "Null" checking preferences
dotnet_style_coalesce_expression                                 = true : warning
dotnet_style_null_propagation                                    = true : warning

# C# code style settings
[*.cs]

# Modifier preferences
# csharp_preferred_modifier_order = public, private, protected, internal, static, extern, new, virtual, abstract, sealed, override, readonly, unsafe, volatile, async
csharp_preferred_modifier_order                       = public, protected, internal, private, new, abstract, virtual, override, sealed, static, readonly, extern, unsafe, volatile, async : warning

# Implicit and explicit types
csharp_style_var_for_built_in_types                   = true : warning
csharp_style_var_when_type_is_apparent                = true : warning
csharp_style_var_elsewhere                            = true : warning

# Expression-bodied members
# options_name = false | true | when_on_single_line
csharp_style_expression_bodied_methods                = false : warning
csharp_style_expression_bodied_constructors           = false : warning
csharp_style_expression_bodied_operators              = false : warning
csharp_style_expression_bodied_properties             = true : warning
csharp_style_expression_bodied_indexers               = true : warning
csharp_style_expression_bodied_accessors              = true : warning

# Pattern matching
csharp_style_pattern_matching_over_is_with_cast_check = true : warning
csharp_style_pattern_matching_over_as_with_null_check = true : warning

# Inlined variable declarations
csharp_style_inlined_variable_declaration             = true : warning

# Expression-level preferences
csharp_prefer_simple_default_expression               = true : warning
csharp_style_deconstructed_variable_declaration       = true : suggestion
csharp_style_pattern_local_over_anonymous_function    = true : warning

# "Null" checking preferences
csharp_style_throw_expression                         = true : warning
csharp_style_conditional_delegate_call                = true : warning

# Code block preferences
csharp_prefer_braces                                  = true : warning

# Formatting conventions
# rule_name = false | true

# .NET formatting settings
[*.{cs,vb}]

# Organize usings
dotnet_sort_system_directives_first = true

# C# formatting settings
[*.cs]

# Newline options
# csharp_new_line_before_open_brace = all | none | accessors, anonymous_methods, anonymous_types, control_blocks, events, indexers, lambdas, local_functions, methods, object_collection_array_initializers, properties, types
csharp_new_line_before_open_brace                                        = control_blocks, local_functions, methods, types
csharp_new_line_before_else                                              = true
csharp_new_line_before_catch                                             = true
csharp_new_line_before_finally                                           = true
csharp_new_line_before_members_in_object_initializers                    = true
csharp_new_line_before_members_in_anonymous_types                        = true
csharp_new_line_between_query_expression_clauses                         = true

# Indentation options
csharp_indent_case_contents                                              = true
csharp_indent_switch_labels                                              = true
# csharp_indent_labels = flush_left | one_less_than_current | no_change
csharp_indent_labels                                                     = flush_left

# Spacing options
csharp_space_after_cast                                                  = false
csharp_space_after_keywords_in_control_flow_statements                   = true
csharp_space_between_method_declaration_parameter_list_parentheses       = false
csharp_space_between_method_call_parameter_list_parentheses              = false
# csharp_space_between_parentheses = false | control_flow_statements, expressions, type_casts
csharp_space_between_parentheses                                         = false
csharp_space_before_colon_in_inheritance_clause                          = false
csharp_space_after_colon_in_inheritance_clause                           = true
# csharp_space_around_binary_operators = before_and_after | none | ignore
csharp_space_around_binary_operators                                     = before_and_after
csharp_space_between_method_declaration_empty_parameter_list_parentheses = false
csharp_space_between_method_call_name_and_opening_parenthesis            = false
csharp_space_between_method_call_empty_parameter_list_parentheses        = false

# Wrapping options
csharp_preserve_single_line_statements                                   = false
csharp_preserve_single_line_blocks                                       = true

# .NET naming conventions
[*.{cs,vb}]

# Symbols
# dotnet_naming_rule.<namingRuleTitle>.symbols = <symbolTitle>
# dotnet_naming_symbols.<symbolTitle>.applicable_kinds = * | namespace, class, struct, interface, enum, property, method, field, event, delegate, parameter, type_parameter, local, local_function
# dotnet_naming_symbols.<symbolTitle>.applicable_accessibilities = * | public, internal, private, protected, protected_internal, local
# dotnet_naming_symbols.<symbolTitle>.required_modifiers = abstract, async, const, readonly, static
# dotnet_naming_rule.<namingRuleTitle>.style = <styleTitle>
# dotnet_naming_rule.<namingRuleTitle>.severity = none | suggestion | warning | error

# private_async_rule
dotnet_naming_rule.private_async_rule.symbols                          = private_async_symbols
dotnet_naming_symbols.private_async_symbols.applicable_kinds           = method, local_function
dotnet_naming_symbols.private_async_symbols.applicable_accessibilities = private, local
dotnet_naming_symbols.private_async_symbols.required_modifiers         = async
dotnet_naming_rule.private_async_rule.style                            = async_camel_case_style
dotnet_naming_style.async_camel_case_style.capitalization              = camel_case
dotnet_naming_style.async_camel_case_style.required_suffix             = Async
dotnet_naming_rule.private_async_rule.severity                         = warning

# private_rule
dotnet_naming_rule.private_rule.symbols                                = private_symbols
dotnet_naming_symbols.private_symbols.applicable_kinds                 = property, method, field, event, delegate
dotnet_naming_symbols.private_symbols.applicable_accessibilities       = private
dotnet_naming_rule.private_rule.style                                  = camel_case_style
dotnet_naming_rule.private_rule.severity                               = warning

# camel_case_rule
dotnet_naming_rule.camel_case_rule.symbols                             = camel_case_symbols
dotnet_naming_symbols.camel_case_symbols.applicable_kinds              = parameter, local, local_function
dotnet_naming_rule.camel_case_rule.style                               = camel_case_style
dotnet_naming_rule.camel_case_rule.severity                            = warning

# async_rule
dotnet_naming_rule.async_rule.symbols                                  = async_symbols
dotnet_naming_symbols.async_symbols.applicable_kinds                   = method
dotnet_naming_symbols.async_symbols.required_modifiers                 = async
dotnet_naming_rule.async_rule.style                                    = async_pascal_case_style
dotnet_naming_style.async_pascal_case_style.capitalization             = pascal_case
dotnet_naming_style.async_pascal_case_style.required_suffix            = Async
dotnet_naming_rule.async_rule.severity                                 = warning

# pascal_case_rule
dotnet_naming_rule.pascal_case_rule.symbols                            = pascal_case_symbols
dotnet_naming_rule.pascal_case_rule.style                              = pascal_case_style
dotnet_naming_rule.pascal_case_rule.severity                           = warning

# Style
# dotnet_naming_style.<styleTitle>.capitalization = pascal_case | camel_case | first_word_upper | all_upper | all_lower
# dotnet_naming_style.<styleTitle>.required_prefix = <prefix>
# dotnet_naming_style.<styleTitle>.required_suffix = <suffix>
# dotnet_naming_style.<styleTitle>.word_separator = <separator character>

# PascalCaseStyle
dotnet_naming_style.pascal_case_style.capitalization                   = pascal_case

# Snake_Pascal_Case_Style
dotnet_naming_style.snake_pascal_case_style.capitalization             = pascal_case
dotnet_naming_style.snake_pascal_case_style.word_separator             = _

# camelCaseStyle
dotnet_naming_style.camel_case_style.capitalization                    = camel_case

# snake_Camel_Case_Style
dotnet_naming_style.snake_camel_case_style.capitalization              = camel_case
dotnet_naming_style.snake_camel_case_style.word_separator              = _

# Firstwordupperstyle
dotnet_naming_style.first_word_upper_style.capitalization              = first_word_upper

# Snake_first_word_upper_style
dotnet_naming_style.snake_first_word_upper_style.capitalization        = first_word_upper
dotnet_naming_style.snake_first_word_upper_style.word_separator        = _

# ALLUPPERSTYLE
dotnet_naming_style.all_upper_style.capitalization                     = all_upper

# SNAKE_ALL_UPPER_STYLE
dotnet_naming_style.snake_all_upper_style.capitalization               = all_upper
dotnet_naming_style.snake_all_upper_style.word_separator               = _

# alllowerstyle
dotnet_naming_style.all_lower_style.capitalization                     = all_lower

# snake_all_lower_style
dotnet_naming_style.snake_all_lower_style.capitalization               = all_lower
dotnet_naming_style.snake_all_lower_style.word_separator               = _
